{"version":3,"sources":["Player.js","SceneMap.js","Loader.js","Scene.js","App.js","serviceWorker.js","index.js"],"names":["Player","scene","resDict","Object","classCallCheck","this","onKeyDown","bind","onKeyUp","buffer","velocity","THREE","position","direction","orientation","actions","moveForward","moveBackward","moveLeft","moveRight","canJump","dampening","speed","parent","name","add","rotateOnAxis","event","code","y","console","log","delta","onObject","cameraQuat","x","z","Number","normalize","applyQuaternion","clone","invert","intersection","blossomCands","children","map","child","type","length","filter","undefined","downOrigin","intersectObjects","point","lerp","velQuat","setFromUnitVectors","multiply","setFromQuaternion","lookAt","sub","copy","SceneMap","mesh","generateMesh","data","generateHeight","geometry","worldWidth","worldDepth","rotateX","Math","PI","vertices","i","l","texture","generateTexture","wrapS","wrapT","width","height","seed","window","random","sin","floor","size","Int16Array","perlin","ImprovedNoise","quality","j","abs","noise","rings","xx","yy","ll","context","image","imageData","shade","vector3","sun","canvas","document","createElement","getContext","fillStyle","fillRect","getImageData","dot","putImageData","canvasScaled","scale","drawImage","v","Loader","resourcesDict","_this","promises","_loop","_ref","_Object$entries","_i","resName","_ref2","slicedToArray","p","loadGLTF","loadRGBE","loadCube","push","then","val","entries","Promise","all","url","resolve","GLTFLoader","load","RGBELoader","path","urls","loader","setPath","Scene","props","possibleConstructorReturn","getPrototypeOf","call","state","spider","crater","texCube","flower","loadPromise","res","start","assertThisInitialized","stop","animate","renderScene","setupScene","destroyContext","handleWindowResize","addEventListener","_this2","container","clientWidth","clientHeight","renderer","antialias","setPixelRatio","devicePixelRatio","shadowMap","enabled","gammaOutput","gammaFactor","fog","camera","player","sceneMap","textureLoader","plane","specular","specularMap","normalMap","shininess","material5","envMap","set","multiplyScalar","encoding","background","rotation","ambLight","updateProjectionMatrix","controls","OrbitControls","domElement","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableKeys","screenSpacePanning","enableRotate","autoRotateSpeed","enablePan","target","update","setSize","appendChild","stats","Stats","dom","frameId","requestAnimationFrame","render","oldPos","quaternion","cameraFocus","setY","addVectors","cameraDiff","subVectors","clampLength","cancelAnimationFrame","innerWidth","innerHeight","aspect","removeChild","forceContextLoss","_this3","react_default","a","ref","style","overflow","Component","App","src_Scene","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03d11466.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Vector2, Vector3 } from \"three\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\r\nimport { loadModel } from \"./Utils.js\";\r\n\r\nclass Player {\r\n\tconstructor(scene, resDict) {\r\n\r\n\t\tthis.scene = scene;\r\n\t\tthis.onKeyDown = this.onKeyDown.bind(this);\r\n\t\tthis.onKeyUp = this.onKeyUp.bind(this);\r\n\t\tthis.buffer = 5;\r\n\r\n\t\tthis.velocity = new THREE.Vector3(0, 0, 0);\r\n\t\tthis.position = new THREE.Vector3(0, 0, 0);\r\n\t\tthis.direction = new THREE.Vector3(0, 0, 0);\r\n\t\tthis.orientation = new THREE.Vector3(-1, 0, 0);\r\n\t\tthis.actions = {\r\n\t\t\tmoveForward: false,\r\n\t\t\tmoveBackward: false,\r\n\t\t\tmoveLeft: false,\r\n\t\t\tmoveRight: false,\r\n\t\t\tcanJump: false\r\n\t\t};\r\n\r\n\t\tthis.dampening = 40;\r\n\t\tthis.speed = 10000;\r\n\r\n\t\tthis.parent = new THREE.Object3D();\r\n\t\tthis.parent.name = \"spider\";\r\n\t\t/* \t\tlet sphere = new THREE.SphereGeometry(50, 300, 300);\r\n\t\t\t\tlet material = new THREE.MeshPhongMaterial({\r\n\t\t\t\t\tmap: new THREE.TextureLoader().load(\"/Assets/2_no_clouds_4k.jpg\"),\r\n\t\t\t\t\tbumpMap: new THREE.TextureLoader().load(\"/Assets/elev_bump_4k.jpg\"),\r\n\t\t\t\t\tbumpScale: 0.005,\r\n\t\t\t\t\tspecularMap: THREE.ImageUtils.loadTexture(\"/Assets/water_4k.png\"),\r\n\t\t\t\t\tspecular: new THREE.Color(\"grey\"),\r\n\t\t\t\t});\r\n\t\t\t\tlet mesh = new THREE.Mesh(sphere, material);\r\n\t\t\r\n\t\t\t\tthis.meshes.push(mesh);\r\n\t\t\t\tscene.add(mesh);\r\n\t\t\t\tsphere = new THREE.SphereGeometry(50.1, 300, 300);\r\n\t\t\t\tmaterial = new THREE.MeshPhongMaterial({\r\n\t\t\t\t\tmap: new THREE.TextureLoader().load(\"/Assets/fair_clouds_4k.png\"),\r\n\t\t\t\t\ttransparent: true,\r\n\t\t\t\t});\r\n\t\t\t\tmesh = new THREE.Mesh(sphere, material);\r\n\t\t\t\tthis.meshes.push(mesh);\r\n\t\t\t\tscene.add(mesh); */\r\n\t\tthis.parent.add(resDict[\"spider\"][\"val\"].scene)\r\n\t\tresDict[\"spider\"][\"val\"].scene.rotateOnAxis(new THREE.Vector3(0, 1, 0), 3.1415 / 2);\r\n\t\tscene.add(this.parent);\r\n\r\n\t}\r\n\r\n\tonKeyDown(event) {\r\n\r\n\t\tswitch (event.code) {\r\n\r\n\t\t\tcase 'ArrowUp':\r\n\t\t\tcase 'KeyW':\r\n\t\t\t\tthis.actions.moveForward = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowLeft':\r\n\t\t\tcase 'KeyA':\r\n\t\t\t\tthis.actions.moveLeft = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowDown':\r\n\t\t\tcase 'KeyS':\r\n\t\t\t\tthis.actions.moveBackward = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowRight':\r\n\t\t\tcase 'KeyD':\r\n\t\t\t\tthis.actions.moveRight = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Space':\r\n\t\t\t\tif (this.actions.canJump === true) {\r\n\t\t\t\t\tthis.velocity.y += 500;\r\n\t\t\t\t}\r\n\t\t\t\t//this.actions.canJump = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"Unknown key input: \" + event.code);\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tonKeyUp(event) {\r\n\r\n\t\tswitch (event.code) {\r\n\r\n\t\t\tcase 'ArrowUp':\r\n\t\t\tcase 'KeyW':\r\n\t\t\t\tthis.actions.moveForward = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowLeft':\r\n\t\t\tcase 'KeyA':\r\n\t\t\t\tthis.actions.moveLeft = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowDown':\r\n\t\t\tcase 'KeyS':\r\n\t\t\t\tthis.actions.moveBackward = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowRight':\r\n\t\t\tcase 'KeyD':\r\n\t\t\t\tthis.actions.moveRight = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"Unknown key input: \" + event.code);\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tupdate(delta, onObject, cameraQuat) {\r\n\t\tthis.velocity.x -= this.velocity.x * this.dampening * delta;\r\n\t\tthis.velocity.z -= this.velocity.z * this.dampening * delta;\r\n\t\tthis.velocity.y -= this.velocity.y * 0.01 * this.dampening * delta;\r\n\r\n\t\tthis.velocity.y -= 9.8 * 100.0 * delta; // 100.0 = mass\r\n\r\n\t\tthis.direction.z = Number(this.actions.moveForward) - Number(this.actions.moveBackward);\r\n\t\tthis.direction.x = Number(this.actions.moveRight) - Number(this.actions.moveLeft);\r\n\t\tthis.direction.normalize(); // this ensures consistent movements in all directions\r\n\t\tif (this.direction.x != 0 || this.direction.z != 0) {\r\n\t\t\tthis.direction.applyQuaternion(cameraQuat.clone().invert());\r\n\t\t\tthis.direction.y = 0;\r\n\t\t\tthis.direction.normalize();\r\n\t\t\t//if (this.actions.moveForward || this.actions.moveBackward) {\r\n\t\t\tthis.velocity.z -= this.direction.z * this.speed * delta;\r\n\t\t\t//}\r\n\t\t\t//if (this.actions.moveLeft || this.actions.moveRight) {\r\n\t\t\tthis.velocity.x -= this.direction.x * this.speed * delta;\r\n\t\t\t//}\r\n\t\t}\r\n\r\n\r\n\t\tthis.position.x += (-this.velocity.x * delta);\r\n\t\tthis.position.z += (this.velocity.z * delta);\r\n\t\tlet intersection = [];\r\n\t\tlet rayCaster;\r\n\t\tlet blossomCands = this.scene.children.map((child) => {\r\n\t\t\tif (child.name == \"spider\") {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t\tif (child.type == \"Mesh\") {\r\n\t\t\t\treturn child;\r\n\t\t\t}\r\n\t\t\tif (child.children.length > 0 && child.children[0].type == \"Mesh\") {\r\n\t\t\t\treturn child.children[0];\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t});\r\n\t\tblossomCands = blossomCands.filter((x) => (x != undefined));\r\n\t\tif (this.buffer - (this.velocity.y * delta) > 0) {\r\n\t\t\tlet downOrigin = this.position.clone();\r\n\t\t\tdownOrigin.y = downOrigin.y + this.buffer;\r\n\t\t\trayCaster = new THREE.Raycaster(downOrigin, new THREE.Vector3(0, -1, 0), 0, this.buffer - (this.velocity.y * delta));\r\n\r\n\t\t\tintersection = rayCaster.intersectObjects(blossomCands);\r\n\r\n\t\t}\r\n\r\n\t\tif (intersection.length > 0) {\r\n\t\t\tthis.position.y = intersection[0].point.y;\r\n\t\t\tthis.velocity.y = 0;\r\n\t\t} else {\r\n\t\t\tthis.position.y += (this.velocity.y * delta);\r\n\t\t}\r\n\r\n\t\tif (this.position.y < 0) {\r\n\r\n\t\t\tthis.velocity.y = 0;\r\n\t\t\tthis.position.y = 0;\r\n\r\n\t\t\tthis.actions.canJump = true;\r\n\r\n\t\t}\r\n\r\n\t\tlet clone = this.velocity.clone();\r\n\t\tclone.x = -clone.x;\r\n\t\tif (clone.length() != 0) {\r\n\t\t\tclone.y = clone.y / 2;\r\n\t\t\tthis.orientation.lerp(clone.normalize(), 0.131);\r\n\t\t\tthis.orientation.normalize();\r\n\t\t}\r\n\r\n\t\tlet velQuat = new THREE.Quaternion();\r\n\t\tvelQuat.setFromUnitVectors(this.orientation, new THREE.Vector3(0, -1, 0));\r\n\t\tvelQuat.multiply((new THREE.Quaternion()).setFromUnitVectors(new THREE.Vector3(0, -1, 0), new THREE.Vector3(-1, 0, 0)));\r\n\t\tlet velEul = new THREE.Euler();\r\n\t\tvelEul.setFromQuaternion(velQuat);\r\n\t\tthis.parent.lookAt(this.parent.position.clone().sub(this.orientation));\r\n\t\tthis.parent.position.copy(this.position.clone());\r\n\t}\r\n}\r\n\r\nexport default Player;","import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Int8Attribute, Vector2, Vector3 } from \"three\";\r\nimport { ImprovedNoise } from 'three/examples/jsm/math/ImprovedNoise.js';\r\n\r\nclass SceneMap {\r\n\tconstructor(scene, resDict) {\r\n\t\tthis.scene = scene;\r\n\t\tthis.resDict = resDict;\r\n\r\n\t\tthis.mesh = this.generateMesh();\r\n\t\tthis.mesh.position.y = 20;\r\n\t\tthis.scene.add(this.mesh);\r\n\r\n\t}\r\n\r\n\tgenerateMesh() {\r\n\t\tconst worldWidth = 256, worldDepth = 256;\r\n\t\tconst data = this.generateHeight(worldWidth, worldDepth);\r\n\r\n\t\tconst geometry = new THREE.PlaneGeometry(2000, 2000, worldWidth - 1, worldDepth - 1);\r\n\t\tgeometry.rotateX(- Math.PI / 2);\r\n\r\n\t\tconst vertices = geometry.vertices;\r\n\r\n\t\tfor (let i = 0, l = vertices.length; i < l; i++) {\r\n\t\t\tvertices[i].y = data[i] * .6;\r\n\t\t}\r\n\r\n\t\tlet texture = new THREE.CanvasTexture(this.generateTexture(data, worldWidth, worldDepth));\r\n\t\ttexture.wrapS = THREE.ClampToEdgeWrapping;\r\n\t\ttexture.wrapT = THREE.ClampToEdgeWrapping;\r\n\r\n\t\tlet mesh = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({ map: texture }));\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\tgenerateHeight(width, height) {\r\n\r\n\t\tlet seed = Math.PI / 4;\r\n\t\twindow.Math.random = function () {\r\n\r\n\t\t\tconst x = Math.sin(seed++) * 10000;\r\n\t\t\treturn x - Math.floor(x);\r\n\r\n\t\t};\r\n\r\n\t\tconst size = width * height, data = new Int16Array(size);\r\n\t\tconst perlin = new ImprovedNoise(), z = Math.random() * 100;\r\n\r\n\t\tlet quality = 1;\r\n\r\n\t\tfor (let j = 0; j < 4; j++) {\r\n\r\n\t\t\tfor (let i = 0; i < size; i++) {\r\n\r\n\t\t\t\tconst x = i % width, y = ~ ~(i / width);\r\n\t\t\t\tdata[i] += Math.abs(perlin.noise(x / quality, y / quality, z) * quality * 1.75);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tquality *= 5;\r\n\r\n\t\t}\r\n\t\tconst rings = [320, 1200];\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tconst xx = (i % width) - width / 2;\r\n\t\t\tconst yy = (~ ~(i / width)) - width / 2;\r\n\t\t\tconst ll = xx * xx + yy * yy;\r\n\t\t\t//80, 140\r\n\t\t\tif (ll < rings[0]) {\r\n\t\t\t\tdata[i] = -1000.0;\r\n\t\t\t} else if (ll < rings[1]) {\r\n\t\t\t\tdata[i] = (ll - rings[0]) / (rings[1] - rings[0]) * data[i];\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tgenerateTexture(data, width, height) {\r\n\r\n\t\tlet context, image, imageData, shade;\r\n\r\n\t\tconst vector3 = new THREE.Vector3(0, 0, 0);\r\n\r\n\t\tconst sun = new THREE.Vector3(1, 1, 1);\r\n\t\tsun.normalize();\r\n\r\n\t\tconst canvas = document.createElement('canvas');\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\r\n\t\tcontext = canvas.getContext('2d');\r\n\t\tcontext.fillStyle = '#000';\r\n\t\tcontext.fillRect(0, 0, width, height);\r\n\r\n\t\timage = context.getImageData(0, 0, canvas.width, canvas.height);\r\n\t\timageData = image.data;\r\n\r\n\t\tfor (let i = 0, j = 0, l = imageData.length; i < l; i += 4, j++) {\r\n\r\n\t\t\tvector3.x = data[j - 2] - data[j + 2];\r\n\t\t\tvector3.y = 2;\r\n\t\t\tvector3.z = data[j - width * 2] - data[j + width * 2];\r\n\t\t\tvector3.normalize();\r\n\r\n\t\t\tshade = vector3.dot(sun);\r\n\t\t\tshade = (shade ) / 1;\r\n\r\n\t\t\timageData[i] = (96 + shade * 128) * (0.5 + data[j] * 0.007) / 2;\r\n\t\t\timageData[i + 1] = (32 + shade * 96) * (0.5 + data[j] * 0.007) / 2;\r\n\t\t\timageData[i + 2] = (shade * 96) * (0.5 + data[j] * 0.007) / 2;\r\n\r\n\t\t}\r\n\r\n\t\tcontext.putImageData(image, 0, 0);\r\n\r\n\t\t// Scaled 4x\r\n\r\n\t\tconst canvasScaled = document.createElement('canvas');\r\n\t\tcanvasScaled.width = width * 4;\r\n\t\tcanvasScaled.height = height * 4;\r\n\r\n\t\tcontext = canvasScaled.getContext('2d');\r\n\t\tcontext.scale(4, 4);\r\n\t\tcontext.drawImage(canvas, 0, 0);\r\n\r\n\t\timage = context.getImageData(0, 0, canvasScaled.width, canvasScaled.height);\r\n\t\timageData = image.data;\r\n\r\n\t\tfor (let i = 0, l = imageData.length; i < l; i += 4) {\r\n\r\n\t\t\tconst v = ~ ~(Math.random() * 5);\r\n\r\n\t\t\timageData[i] += v;\r\n\t\t\timageData[i + 1] += v;\r\n\t\t\timageData[i + 2] += v;\r\n\r\n\t\t}\r\n\r\n\t\tcontext.putImageData(image, 0, 0);\r\n\r\n\t\treturn canvasScaled;\r\n\r\n\t}\r\n\tupdate(delta) {\r\n\t}\r\n}\r\n\r\nexport default SceneMap;","import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\r\nimport { RGBELoader } from \"three/examples/jsm/loaders/RGBELoader.js\";\r\n\r\nclass Loader {\r\n\tconstructor(resourcesDict) {\r\n\r\n\t\tthis.promises = [];\r\n\r\n\t\tfor (let [resName, resDict] of Object.entries(resourcesDict)) {\r\n\t\t\tlet p;\r\n\t\t\tswitch (resDict[\"type\"]) {\r\n\t\t\t\tcase 'GLTF':\r\n\t\t\t\t\tp = this.loadGLTF(resDict[\"url\"]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'RGBE':\r\n\t\t\t\t\tp = this.loadRGBE(resDict[\"url\"]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Cube':\r\n\t\t\t\t\tp = this.loadCube(resDict[\"path\"], resDict[\"urls\"]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log(\"ERROR: unknown import type - \" + resDict[\"type\"]);\r\n\t\t\t}\r\n\t\t\tthis.promises.push(p.then((val) => {\r\n\t\t\t\tresDict[\"val\"] = val;\r\n\t\t\t\tresDict[\"confirm\"] = \"Confirmed - \" + resName;\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\treturn Promise.all(this.promises);\r\n\r\n\t}\r\n\r\n\tloadGLTF(url) {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tnew GLTFLoader().load(url, resolve);\r\n\t\t});\r\n\t}\r\n\r\n\tloadRGBE(url) {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tnew RGBELoader().load(url, resolve);\r\n\t\t});\r\n\t}\r\n\r\n\tloadCube(path, urls) {\r\n\t\tconst loader = new THREE.CubeTextureLoader();\r\n\t\tloader.setPath(path);\r\n\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tloader.load(urls, resolve);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default Loader;","import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Vector3 } from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport Player from \"./Player.js\";\r\nimport SceneMap from \"./SceneMap.js\";\r\nimport { loadCube } from \"./Utils.js\";\r\nimport Loader from \"./Loader.js\";\r\nimport { DDSLoader } from \"three/examples/jsm/loaders/DDSLoader.js\";\r\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\r\n\r\nclass Scene extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\r\n\t\tthis.resDict = {\r\n\t\t\t\"spider\": {\r\n\t\t\t\t\"type\": \"GLTF\",\r\n\t\t\t\t\"url\": \"/Assets/spider.gltf\"\r\n\t\t\t},\r\n\t\t\t\"crater\": {\r\n\t\t\t\t\"type\": \"GLTF\",\r\n\t\t\t\t\"url\": \"/Assets/crater.glb\"\r\n\t\t\t},\r\n\t\t\t\"texCube\": {\r\n\t\t\t\t\"type\": \"Cube\",\r\n\t\t\t\t\"path\": 'https://threejs.org/examples/textures/cube/Bridge2/',\r\n\t\t\t\t\"urls\": ['posx.jpg', 'negx.jpg', 'posy.jpg', 'negy.jpg', 'posz.jpg', 'negz.jpg']\r\n\t\t\t},\r\n\t\t\t\"flower\": {\r\n\t\t\t\t\"type\": \"GLTF\",\r\n\t\t\t\t\"url\": \"https://threejs.org/examples/models/gltf/Flower/Flower.glb\"\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.loadPromise = new Loader(this.resDict).then(\r\n\t\t\t(res) => { console.log(\"INFO: All assets loaded!\") }\r\n\t\t);\r\n\r\n\t\tthis.start = this.start.bind(this);\r\n\t\tthis.stop = this.stop.bind(this);\r\n\t\tthis.animate = this.animate.bind(this);\r\n\t\tthis.renderScene = this.renderScene.bind(this);\r\n\t\tthis.setupScene = this.setupScene.bind(this);\r\n\t\tthis.destroyContext = this.destroyContext.bind(this);\r\n\t\tthis.handleWindowResize = this.handleWindowResize.bind(this);\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\twindow.addEventListener(\"resize\", this.handleWindowResize);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.loadPromise.then(() => { this.setupScene() });\r\n\t}\r\n\r\n\tsetupScene() {\r\n\t\tthis.width = this.container.clientWidth;\r\n\t\tthis.height = this.container.clientHeight;\r\n\r\n\t\tconst renderer = new THREE.WebGLRenderer({ antialias: true });\r\n\t\trenderer.setPixelRatio(window.devicePixelRatio);\r\n\t\trenderer.shadowMap.enabled = true;\r\n\t\trenderer.gammaOutput = true;\r\n\t\trenderer.gammaFactor = 2.2;\r\n\t\trenderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n\t\tlet scene = new THREE.Scene();\r\n\t\tscene.fog = new THREE.FogExp2(0xefd1b5, 0.00025);\r\n\r\n\t\tlet camera = new THREE.PerspectiveCamera(\r\n\t\t\t60,\r\n\t\t\tthis.width / this.height,\r\n\t\t\t0.25,\r\n\t\t\t12000\r\n\t\t);\r\n\t\tscene.add(camera);\r\n\r\n\t\tthis.renderer = renderer;\r\n\t\tthis.scene = scene;\r\n\t\tthis.camera = camera;\r\n\t\tthis.player = new Player(scene, this.resDict);\r\n\t\tlet sceneMap = new SceneMap(scene, this.resDict);\r\n\t\tthis.sceneMap = sceneMap;\r\n\r\n\t\tdocument.addEventListener('keydown', this.player.onKeyDown);\r\n\t\tdocument.addEventListener('keyup', this.player.onKeyUp);\r\n\r\n\t\tvar gridHelper = new THREE.GridHelper(9000, 200);\r\n\t\tgridHelper.position.y = 2;\r\n\t\t//scene.add(gridHelper);\r\n\t\tlet textureLoader = new THREE.TextureLoader();\r\n\t\tconst plane = new THREE.Mesh(\r\n\t\t\tnew THREE.PlaneGeometry(10000, 10000, 200, 200),\r\n\t\t\tnew THREE.MeshPhongMaterial({\r\n\t\t\t\tspecular: 0x111111,\r\n\t\t\t\tmap: textureLoader.load('https://threejs.org/examples/models/gltf/LeePerrySmith/Map-COL.jpg'),\r\n\t\t\t\tspecularMap: textureLoader.load('https://threejs.org/examples/models/gltf/LeePerrySmith/Map-SPEC.jpg'),\r\n\t\t\t\tnormalMap: textureLoader.load('https://threejs.org/examples/models/gltf/LeePerrySmith/Infinite-Level_02_Tangent_SmoothUV.jpg'),\r\n\t\t\t\tshininess: 25\r\n\t\t\t})\r\n\t\t);\r\n\r\n\r\n\r\n\t\tconst geometry = new THREE.BoxGeometry(200, 200, 200);\r\n\t\tconst material5 = new THREE.MeshBasicMaterial({ envMap: this.resDict[\"texCube\"][\"val\"] });\r\n\t\tlet mesh = new THREE.Mesh(geometry, material5);\r\n\t\tmesh.position.set(911.9191571353953, 172.85702349744838, 509.97206583931273);\r\n\t\tscene.add(mesh);\r\n\r\n\t\tlet crater = this.resDict[\"crater\"][\"val\"].scene;\r\n\t\tcrater.position.y = 30;\r\n\t\tcrater.scale.multiplyScalar(3);\r\n\t\tscene.add(this.resDict[\"crater\"][\"val\"].scene);\r\n\r\n\t\tlet texCube = this.resDict[\"texCube\"][\"val\"];\r\n\t\ttexCube.encoding = THREE.sRGBEncoding;\r\n\t\tscene.background = 0xefd1b5;\r\n\t\t//scene.environment =  0xefd1b5;//texCube;\r\n\r\n\t\tplane.position.y = 0;\r\n\t\tplane.rotation.x = - Math.PI / 2;\r\n\t\t//scene.add(plane);\r\n\r\n\t\tlet spotLight = new THREE.SpotLight(0xffffff, 0.25);\r\n\t\tspotLight.position.set(45, 50, 15);\r\n\t\t//camera.add(spotLight);\r\n\t\t//this.spotLight = spotLight;\r\n\r\n\t\tlet ambLight = new THREE.AmbientLight(0x333333);\r\n\t\tambLight.position.set(5, 3, 5);\r\n\t\tthis.camera.add(ambLight);\r\n\r\n\t\tthis.camera.lookAt(this.player.position.clone());\r\n\t\tthis.camera.updateProjectionMatrix();\r\n\t\tthis.camera.position.x = 100;\r\n\t\tthis.camera.position.y = 50;\r\n\r\n\r\n\t\tlet controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n\t\tcontrols.enableDamping = true;\r\n\t\tcontrols.dampingFactor = 0.25;\r\n\t\tcontrols.enableZoom = true;\r\n\t\tcontrols.zoomSpeed = 2.1;\r\n\t\tcontrols.enableKeys = false;\r\n\t\tcontrols.screenSpacePanning = false;\r\n\t\tcontrols.enableRotate = true;\r\n\t\t//controls.autoRotate = true;\r\n\t\tcontrols.dampingFactor = 1;\r\n\t\tcontrols.autoRotateSpeed = 1.2;\r\n\t\tcontrols.enablePan = false;\r\n\t\tcontrols.target.copy(this.player.position);\r\n\t\tcontrols.update();\r\n\t\tthis.controls = controls;\r\n\t\tthis.renderer.setSize(this.width, this.height);\r\n\t\tthis.container.appendChild(this.renderer.domElement);\r\n\r\n\t\tthis.stats = new Stats();\r\n\t\tthis.container.appendChild(this.stats.dom);\r\n\r\n\t\tthis.start();\r\n\t}\r\n\r\n\tstart() {\r\n\t\tif (!this.frameId) {\r\n\t\t\tthis.frameId = requestAnimationFrame(this.animate);\r\n\t\t}\r\n\t}\r\n\r\n\trenderScene() {\r\n\t\tthis.renderer.render(this.scene, this.camera);\r\n\t}\r\n\r\n\tanimate() {\r\n\t\t//this.sceneMap.update(0.01);\r\n\t\tthis.frameId = requestAnimationFrame(this.animate);\r\n\t\tthis.controls.update();\r\n\t\tlet oldPos = this.player.position.clone();\r\n\r\n\t\tthis.player.update(0.01, true, this.camera.quaternion);\r\n\t\tvar cameraFocus = this.player.position.clone();\r\n\t\tcameraFocus.setY(cameraFocus.y + 5);\r\n\t\tlet delta = this.player.position.clone().sub(oldPos);\r\n\t\tthis.controls.target.copy(cameraFocus);\r\n\t\tthis.camera.position.addVectors(this.camera.position, delta);\r\n\t\t\r\n\t\tvar cameraDiff = (new THREE.Vector3()).subVectors(this.camera.position, cameraFocus)\r\n\t\tif ( cameraDiff.length() > 15) {\r\n\t\t\tthis.camera.position.copy(cameraDiff.clampLength(0,15).add(cameraFocus));\r\n\t\t}\r\n\r\n\t\t//this.camera.lookAt(this.player.position);\r\n\t\tthis.stats.update();\r\n\t\tthis.renderScene();\r\n\t}\r\n\r\n\tstop() {\r\n\t\tcancelAnimationFrame(this.frameId);\r\n\t}\r\n\r\n\thandleWindowResize() {\r\n\t\tlet width = window.innerWidth;\r\n\t\tlet height = window.innerHeight;\r\n\t\tthis.camera.aspect = width / height;\r\n\t\tthis.camera.updateProjectionMatrix();\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.stop();\r\n\t\tthis.destroyContext();\r\n\t}\r\n\r\n\tdestroyContext() {\r\n\t\tthis.container.removeChild(this.renderer.domElement);\r\n\t\tthis.renderer.forceContextLoss();\r\n\t\tthis.renderer.context = null;\r\n\t\tthis.renderer.domElement = null;\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst width = \"100%\";\r\n\t\tconst height = \"100%\";\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={(container) => {\r\n\t\t\t\t\tthis.container = container;\r\n\t\t\t\t}}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: width,\r\n\t\t\t\t\theight: height,\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\toverflow: \"hidden\",\r\n\t\t\t\t}}></div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Scene;\r\n","import React, { Component } from 'react';\r\nimport Scene from './Scene';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Scene />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}